C51 COMPILER V9.52.0.0   LED                                                               07/10/2018 10:50:11 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE LED
OBJECT MODULE PLACED IN .\Output\Led.obj
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE Bsp\Led.c BROWSE INCDIR(.\Include;.\Bsp) DEFINE(FOSC_160000) 
                    -DEBUG OBJECTEXTEND PRINT(.\List\Led.lst) TABS(2) OBJECT(.\Output\Led.obj)

line level    source

   1          #define __LED_C__
   2          #include "Led.h"
   3          #include "Log.h"
   4          
   5          static Led_Status_t XDATA s_LedStatus[LED_MAX_ID];
   6          
   7          void LedInit(void)
   8          {
   9   1        uint8 i;
  10   1        P01_PushPull_Mode;
  11   1        P11_PushPull_Mode;
  12   1        P12_PushPull_Mode;
  13   1        P15_PushPull_Mode;
  14   1      
  15   1        LED_OPEN_OFF;
  16   1        LED_CLOSE_OFF;
  17   1        LED_PAUSE_OFF;
  18   1      
  19   1        for(i = 0; i < LED_MAX_ID; i++)
  20   1        {
  21   2            s_LedStatus[i].count = 0;
  22   2            s_LedStatus[i].timerOn = 0;
  23   2            s_LedStatus[i].timerOff = 0;
  24   2            s_LedStatus[i].cnt = 0;
  25   2        }
  26   1      }
  27          
  28          sysServerTO_t LedShowServer(void)
  29          {
  30   1        uint8 i;
  31   1        for(i = 0; i < LED_MAX_ID; i++)
  32   1        {
  33   2          if(s_LedStatus[i].cnt > 0)
  34   2          {
  35   3              s_LedStatus[i].cnt--;
  36   3              if(s_LedStatus[i].cnt == s_LedStatus[i].timerOff)
  37   3            {
  38   4                  LedSetLevel(i, LOW, false);
  39   4            }
  40   3          }
  41   2          else
  42   2          {
  43   3              if(s_LedStatus[i].count == 0xFF)
  44   3              {
  45   4                  LedSetLevel(i, HIGH, false);
  46   4                  s_LedStatus[i].cnt = s_LedStatus[i].timerOn + s_LedStatus[i].timerOff;
  47   4              }
  48   3              else if(s_LedStatus[i].count > 0)
  49   3              {
  50   4                  LedSetLevel(i, HIGH, false);
  51   4                  s_LedStatus[i].count--;
  52   4                  s_LedStatus[i].cnt = s_LedStatus[i].timerOn + s_LedStatus[i].timerOff;
  53   4              }
  54   3          }
C51 COMPILER V9.52.0.0   LED                                                               07/10/2018 10:50:11 PAGE 2   

  55   2        }
  56   1        return LED_SHOW_SERVER_TICK;
  57   1      }
  58          
  59          
  60          //count:闪烁次数, 其中count = 0xff为连续
  61          //on_time:开时间,
  62          //off_time关时间(单位10ms),
  63          void LedSetFlash(uint8 id, uint8 count, uint16 ontime, uint16 offtime)     
  64          {
  65   1        if(id > LED_MAX_ID)
  66   1        {
  67   2          return;
  68   2        } 
  69   1          s_LedStatus[id].count = count;
  70   1          s_LedStatus[id].timerOn = ontime;
  71   1          s_LedStatus[id].timerOff = offtime;
  72   1          s_LedStatus[id].cnt = 0;  
  73   1          LedSetLevel(id, LOW, false);
  74   1      }
  75          
  76          
  77          void LedSetLevel(uint8 id, uint8 level, uint8 flag)
  78          {
  79   1        if(id > LED_MAX_ID)
  80   1        {
  81   2          return ;
  82   2        }
  83   1        switch (id)
  84   1        {
  85   2          case LED_OPEN_ID:     
  86   2              if(level)
  87   2              {
  88   3                LED_OPEN_ON ;
  89   3              }
  90   2              else
  91   2            {
  92   3                LED_OPEN_OFF;
  93   3            }
  94   2            break;
  95   2            
  96   2          case LED_CLOSE_ID:      
  97   2              if(level)
  98   2              {
  99   3                LED_CLOSE_ON ;
 100   3              }
 101   2              else
 102   2            {
 103   3                LED_CLOSE_OFF;
 104   3            }
 105   2            break;
 106   2            
 107   2          case LED_PAUSE_ID:      
 108   2              if(level)
 109   2              {
 110   3                LED_PAUSE_ON ;
 111   3              }
 112   2              else
 113   2            {
 114   3                LED_PAUSE_OFF;
 115   3            }
 116   2            break;
C51 COMPILER V9.52.0.0   LED                                                               07/10/2018 10:50:11 PAGE 3   

 117   2            
 118   2          case LED_WIFI_ID:
 119   2              if(level)
 120   2              {
 121   3                LED_WIFI_ON;
 122   3              }
 123   2              else
 124   2            {
 125   3                LED_WIFI_OFF;
 126   3            }
 127   2            break;
 128   2            
 129   2          default:
 130   2            break;
 131   2        }
 132   1        if(flag)
 133   1        {
 134   2          s_LedStatus[id].count = 0;
 135   2          s_LedStatus[id].timerOn = 0;
 136   2          s_LedStatus[id].timerOff = 0;
 137   2          s_LedStatus[id].cnt = 0;  
 138   2        }
 139   1      }
 140          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    620    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     32    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
