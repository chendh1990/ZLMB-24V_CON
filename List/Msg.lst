C51 COMPILER V9.52.0.0   MSG                                                               06/27/2018 17:53:33 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MSG
OBJECT MODULE PLACED IN .\Output\Msg.obj
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE Source\Msg.c BROWSE INCDIR(.\Include;.\Bsp) DEFINE(FOSC_16000
                    -0) DEBUG OBJECTEXTEND PRINT(.\List\Msg.lst) TABS(2) OBJECT(.\Output\Msg.obj)

line level    source

   1          #define __QMSG_C__
   2          #include "Msg.h"
   3          #include "Common.h"
   4          #include "Log.h"
   5          
   6          uint8 QMsgInit(MSG_Q_t *const this, const MSG_t *const msgBuffer, uint8 cap)
   7          {
   8   1        if(!this)
   9   1        {
  10   2          return 1;
  11   2        }
  12   1        if(!msgBuffer)
  13   1        {
  14   2          return 2;
  15   2        }
  16   1        if(cap == 0)
  17   1        {
  18   2          return 3;
  19   2        }
  20   1        this->pStart = msgBuffer;
  21   1        this->pEnd = msgBuffer + cap;
  22   1        this->In = 0;
  23   1        this->Out = 0;
  24   1        this->Size = 0;
  25   1        this->Capacity = cap;
  26   1        return 0;
  27   1      }
  28          uint8 QMsgPost(MSG_Q_t *const this, MSG_t msg)
  29          {
  30   1        if(!this)
  31   1        {
  32   2          LOG("[QMsgPost] this is null\r\n");
  33   2          return 1;
  34   2        }
  35   1        if(this->Size < this->Capacity)
  36   1        {
  37   2          if(this->In >= this->Capacity)
  38   2          {
  39   3            this->In = 0;
  40   3          }
  41   2          this->pStart[this->In].msgID = msg.msgID;
  42   2          this->pStart[this->In].Param = msg.Param;
  43   2          this->In++;
  44   2          ENTER_CRITICAL();
  45   2          this->Size++;
  46   2          EXIT_CRITICAL();
  47   2          LOG("QMsgPost: this = %x\r\n", this);
  48   2          LOG("QMsgPost:&g_Qmsg = %x\r\n", &g_QMsg);
  49   2          LOG("QMsgPost Qmsgid=%d, Qparam=%d\r\n", (uint16)(this->pStart[this->In-1].msgID), (uint16)(this->pStart
             -[this->In-1].Param));
  50   2          LOG("QMsgPost msgid=%d, param=%d\r\n", (uint16)(msg.msgID), (uint16)(msg.Param));
  51   2          LOG("QMsgPost QSize:%d\r\n", (uint16)(this->Size));
  52   2          LOG("QMsgPost QIn:%d\r\n\r\n", (uint16)(this->In));
  53   2          return 0;
C51 COMPILER V9.52.0.0   MSG                                                               06/27/2018 17:53:33 PAGE 2   

  54   2        }
  55   1        return 2;
  56   1      }
  57          
  58          uint8 QMsgPend(   MSG_Q_t *const this, MSG_t *const pMsg)
  59          {
  60   1        MSG_t msg;
  61   1      
  62   1        if(!this)
  63   1        {
  64   2          LOG("[QMsgPend] this is null\r\n");
  65   2          return 1;
  66   2        }
  67   1        if(!pMsg)
  68   1        {
  69   2          return 2;
  70   2        }
  71   1        if(this->Size > 0)
  72   1        {
  73   2          if(this->Out >= this->Capacity)
  74   2          {
  75   3            this->Out = 0;
  76   3          }
  77   2          pMsg->msgID = this->pStart[this->Out].msgID;
  78   2          pMsg->Param = this->pStart[this->Out].Param;
  79   2          msg.msgID = this->pStart[this->Out].msgID;
  80   2          msg.Param = this->pStart[this->Out].Param;
  81   2          this->Out++;
  82   2          ENTER_CRITICAL();
  83   2          this->Size--;
  84   2          EXIT_CRITICAL();
  85   2          LOG("QMsgPend: this = %x\r\n", (uint16)this);
  86   2          LOG("QMsgPend:&g_Qmsg = %x\r\n", (uint16)(&g_QMsg));
  87   2          LOG("QMsgPend Qmsgid=%d, Qparam=%d\r\n", (uint16)(this->pStart[this->Out-1].msgID), (uint16)(this->pStar
             -t[this->Out-1].Param));
  88   2          LOG("QMsgPend msgid=%d, param=%d\r\n", (uint16)(pMsg->msgID), (uint16)(pMsg->Param));
  89   2          LOG("QMsgPend interal msgid=%d, param=%d\r\n", (uint16)(msg.msgID), (uint16)(msg.Param));
  90   2          LOG("QMsgPend QSize:%d\r\n", (uint16)(this->Size));
  91   2          LOG("QMsgPend QOut:%d\r\n\r\n", (uint16)(this->Out));
  92   2          return 0;
  93   2        }
  94   1        return 3;
  95   1      }
  96          
  97          uint8 QMsgSize(const MSG_Q_t *const this)
  98          {
  99   1        return this->Size;
 100   1      }
 101          uint8 QMsgCapacity(const MSG_Q_t *const this)
 102          {
 103   1        return this->Capacity;
 104   1      }
 105          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    975    ----
   CONSTANT SIZE    =    387    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      20
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.52.0.0   MSG                                                               06/27/2018 17:53:33 PAGE 3   

   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
